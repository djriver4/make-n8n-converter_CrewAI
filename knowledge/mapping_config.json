{
    "webhook": {"n8n_node": "Webhook Trigger", "make_concept": "Bundle containing webhook data"},
    "filter": {"n8n_node": "IF", "make_concept": "Conditional logic within a Scenario"},
    "transformer": {"n8n_node": "Set", "make_concept": "Bundle with modified or added data fields"},
    "action": {"n8n_node": "Function", "make_concept": "Bundle(s) manipulated by custom code"},
    "internal": {"n8n_node": "n8n-nodes-base.noOp", "make_concept": null},
    "salesforce": {"n8n_node": "n8n-nodes-base.salesforce", "make_concept": "Bundle representing Salesforce data"},
    "mailchimp": {"n8n_node": "n8n-nodes-base.mailchimp", "make_concept": "Bundle representing Mailchimp data"},
    "scheduled_events": {"n8n_node": "Schedule Trigger", "make_concept": "Scenario Schedule"},
    "rss_feed_watcher": {"n8n_node": "RSS Feed Read", "make_concept": "Bundle containing RSS item data"},
    "watch_files_folders": {"n8n_node": "Watch File", "make_concept": "Bundle containing file metadata and content"},
    "watch_for_new_emails": {"n8n_node": "Email Trigger (IMAP)", "make_concept": "Bundle containing email data"},
    "watch_for_new_records_in_databases": {"n8n_node": "Database-specific Trigger or Polling with IF", "make_concept": "Bundle containing database record data"},
    "polling_api": {"n8n_node": "HTTP Request + Schedule Trigger", "make_concept": "Bundle containing API response data"},
    "new_record_created_updated_deleted_database": {"n8n_node": "Database-specific Trigger or Polling with IF", "make_concept": "Bundle containing database record data"},
    "new_file_created_modified": {"n8n_node": "Watch File", "make_concept": "Bundle containing file metadata and content"},
    "email_with_specific_subject_content": {"n8n_node": "Email Trigger (IMAP) + IF", "make_concept": "Bundle containing email data"},
    "web_form_submission": {"n8n_node": "Webhook Trigger or Form-specific Trigger", "make_concept": "Bundle containing form submission data"},
    "survey_response": {"n8n_node": "Webhook Trigger or Survey-specific Trigger", "make_concept": "Bundle containing survey response data"},
    "search_records_rows": {"n8n_node": "Database-specific Node (Get Many/List with Filter) or HTTP Request to Database API", "make_concept": "Bundle representing database record(s)"},
    "list_records_sheets_customers": {"n8n_node": "Database-specific Node (Get Many/List) or HTTP Request to Service API", "make_concept": "Bundle representing service data"},
    "file_system_search": {"n8n_node": "Cloud Storage Node (List Files) or Execute Command", "make_concept": "Bundle containing file metadata"},
    "email_search": {"n8n_node": "IMAP Node (Search)", "make_concept": "Bundle containing email data"},
    "crm_search": {"n8n_node": "CRM-specific Node (Search) or HTTP Request to CRM API", "make_concept": "Bundle representing CRM record(s)"},
    "get_single_record": {"n8n_node": "Database/Service-specific Node (Get) or HTTP Request with ID", "make_concept": "Bundle representing a single record"},
    "create": {"n8n_node": "Database/Service-specific Node (Create) or HTTP Request (POST)", "make_concept": "Bundle representing the created record"},
    "update": {"n8n_node": "Database/Service-specific Node (Update) or HTTP Request (PUT/PATCH)", "make_concept": "Bundle representing the updated record"},
    "delete": {"n8n_node": "Database/Service-specific Node (Delete) or HTTP Request (DELETE)", "make_concept": null},
    "text_processing_actions": {"n8n_node": "Text Manipulation (Community), Code, or AI Nodes", "make_concept": "Bundle containing processed text data"},
    "conversational_and_messaging_actions": {"n8n_node": "Messaging Platform Nodes, Email Node, or AI Nodes", "make_concept": "Bundle containing message data"},
    "content_generation_actions": {"n8n_node": "Integrations with Content Platforms or AI Nodes", "make_concept": "Bundle containing generated content data"},
    "data_enrichment_and_insights_actions": {"n8n_node": "Data Enrichment Service Integrations or HTTP Request", "make_concept": "Bundle containing enriched data"},
    "translation_and_localization_actions": {"n8n_node": "Translation Service Integrations or HTTP Request", "make_concept": "Bundle containing translated text"},
    "knowledge_and_learning_actions": {"n8n_node": "Integrations with Knowledge Platforms or AI Nodes", "make_concept": "Bundle containing retrieved knowledge"},
    "workflow_optimization_actions": {"n8n_node": "Control Flow Nodes, Function Node", "make_concept": "Control flow within a Scenario"},
    "creative_and_artistic_actions": {"n8n_node": "Integrations with Creative Tools or HTTP Request", "make_concept": "Bundle containing creative output data"},
    "aggregate": {"n8n_node": "Aggregate", "make_concept": "Bundle containing aggregated data"},
    "parse_json": {"n8n_node": "JSON Parse", "make_concept": "Bundle containing parsed JSON data"},
    "parse_xml": {"n8n_node": "XML Parse", "make_concept": "Bundle containing parsed XML data"},
    "parse_csv": {"n8n_node": "CSV Parse", "make_concept": "Bundle containing parsed CSV data"},
    "compress_decompress": {"n8n_node": "Archive (Community), Extract (Community), or Execute Command", "make_concept": "Bundle containing compressed/decompressed file(s)"},
    "encrypt_decrypt": {"n8n_node": "Encryption (Community) or Code Node", "make_concept": "Bundle containing encrypted/decrypted data"},
    "authenticate": {"n8n_node": "Credentials Management within Nodes", "make_concept": "Connection established using credentials"},
    "execute_scripts_sql": {"n8n_node": "Code Node, Database-specific Nodes (Execute SQL)", "make_concept": "Bundle(s) resulting from script/SQL execution"},
    "call_api_http_requests": {"n8n_node": "HTTP Request", "make_concept": "Bundle containing API request/response data"},
    "schedule_future_tasks_reminders": {"n8n_node": "Wait Node, Cron Node", "make_concept": "Scheduled execution or delay"},
    "notify_slack_teams_etc": {"n8n_node": "Messaging Platform Nodes", "make_concept": "Notification message sent"},
    "validate_data_form_input": {"n8n_node": "Data Validation (Community), IF Node, Function Node", "make_concept": "Bundle with validation status"},
    "generate_reports_documents": {"n8n_node": "Integrations with Document Generation Services, Document Generator (Community)", "make_concept": "Bundle containing generated report/document data"},
    "translate_text": {"n8n_node": "Translation Service Integrations or HTTP Request", "make_concept": "Bundle containing translated text"},
    "analyze_text_images": {"n8n_node": "Integrations with AI/Analytics Platforms or HTTP Request", "make_concept": "Bundle containing analysis results"},
    "route_conditional": {"n8n_node": "IF, Switch", "make_concept": "Conditional flow of Bundles"},
    "log": {"n8n_node": "Log Message", "make_concept": "Scenario Log Entry"},
    "backup": {"n8n_node": "Integrations with Backup Services, Cloud Storage Nodes, Execute Command", "make_concept": "Bundle containing backup data"},
    "calculate": {"n8n_node": "Set, Function", "make_concept": "Bundle with calculated data"},
    "merge": {"n8n_node": "Merge", "make_concept": "Bundle containing merged data"},
    "split": {"n8n_node": "Split Out", "make_concept": "Multiple Bundles"},
    "make_an_api_call": {"n8n_node": "HTTP Request", "make_concept": "Bundle containing API request/response data"},
    "iterator": {"n8n_node": "Iterate (Community) or Split Out", "make_concept": "Individual Bundles for each item in a list"},
    "aggregator": {"n8n_node": "Aggregate", "make_concept": "Bundle containing aggregated data"},
    "data_store": {"n8n_node": "Data Store (Community) or Database/Key-Value Store Integration", "make_concept": "Stored data"},
    "compose_a_string": {"n8n_node": "Set, Function", "make_concept": "Bundle containing the composed string"},
    "set_variable": {"n8n_node": "Set", "make_concept": "Scenario-level variable"}
}